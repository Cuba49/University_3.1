<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +d7UlPIdNPVM+/IvwcB1rarntc2y9gZLgxvvocNr7G7Pbctbp+b1zPx2/ZcLCrsFLbKxkPc4bXOsq2vd
        TW/9Juod6in036qdU6ecgU9atrbfabAGU1cECN3qMf7/APi/YrvTug5nT2BtfUXP21tqBdVXO1pe9pdt
        j377npKcF/S+uMrZTfY7FfNllwxMg+mSfd9nqrsq/wC7DPp/uLluudCs6r9acfIw8rHuuxK62vwzvGRG
        Kdlzran17K7NP0e+z+cXplvSM6525/UDOv8Aga++0dx/wbVZq6bWxsPe57i7fY7Ru907/fsb9Hd+Ykpt
        bvZvg8Tt7/1UlJJJT//T9VSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSU//U9VSSSSUpJJJJSkkk
        klKSSSSUpJJJJSkkkklKSSSSU//V9VSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfK
        qSSn6qSXyqkkp//Z/9sAQwABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AgICAgICAgICAgIDAwMDAwMDAwMD/9sAQwEBAQEBAQEBAQEBAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgAZABkAwERAAIRAQMRAf/EAB8AAAAGAgMB
        AAAAAAAAAAAAAAcIBgUECQMKAgEAC//EALUQAAIBAwQBAwMCAwMDAgYJdQECAwQRBRIGIQcTIgAIMRRB
        MiMVCVFCFmEkMxdScYEYYpElQ6Gx8CY0cgoZwdE1J+FTNoLxkqJEVHNFRjdHYyhVVlcassLS4vJkg3ST
        hGWjs8PT4yk4ZvN1Kjk6SElKWFlaZ2hpanZ3eHl6hYaHiImKlJWWl5iZmqSlpqeoqaq0tba3uLm6xMXG
        x8jJytTV1tfY2drk5ebn6Onq9PX29/j5+v/EAB8BAAAGAwEBAQAAAAAAAAAAAAYFBAMHAggBCQAKC//E
        ALURAAIBAwIEBAMFBAQEBgYFbQECAxEEIRIFMQYAIhNBUQcyYRRxCEKBI5EVUqFiFjMJsSTB0UNy8Bfh
        gjQlklMYY0TxorImNRlUNkVkJwpzg5NGdMLS4vJVZXVWN4SFo7PD0+PzKRqUpLTE1OT0laW1xdXl9ShH
        V2Y4doaWprbG1ub2Z3eHl6e3x9fn90hYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq
        +v/dAAQADf/aAAwDAQACEQMRAD8A3+Pfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3
        Xvfuvde9+691737r3Xvfuvdf/9Df49+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde
        9+691737r3Xvfuvde9+691//0d/j37r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69173
        7r3Xvfuvde9+691737r3X//S3+Pfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfu
        vde9+691737r3Xvfuvdf/9Pf49+691737r3XvfuvdQZ8njaauocZU5Chp8llEq5MZj56unirsjHj0ikr
        3oaSSRairSijnRpjGrCMOpawI9+691O9+691737r3Xvfuvde9+691737r3XVx9Li9ibf4C1z/rC/v3Xu
        vXB+hB9+69137917r3P+8/7xf/e7e/de6//U392+n+xH+9j37r3SUz+/djbVeWLdG89p7ckp4aWonjz2
        48Ph3hgrp3pqKaVMjWUzRxVlTE0cTNZZHUqpJBHv3Xus43ns9gpG69tESKjIRncWdaSKGjZCKr1K6sCC
        PqDx7917rVfqZ/j/APIb5x/M7I/In5Ub82z151XvLd3X2yshiu/qjZiw7yzm8potz7UwlfPuvG4uPbG0
        ti7JxFGuKxkMUcU85mqTNVP5H917oXN+dNfE/wCHHb3xS3jjcj3RvnaHyMyHc/Wfm7S+SXYG9Np1s9b1
        dj9+7A3ZhXzG+N+4Pb6rncbPHSZnHUyVFLJU6I4DEpYe690TXpLeXdEmC6sG7qnozJ4fozdHfvVPdnYn
        Z3U/yn777Szna+Kw2W3XuKDv2pxu0cTkq3NY7b1Rjq7HQxYuQvj66PIARx/aBvde6Hz4FVWM7i+MnTu4
        /mBs7ee8/kjhsjvfC7qpN54vfLbsGxdk9/dP0GwlxNJFksbh8nRVXRlFWzwNipJ6ioxLyR1TtUyTI/uv
        dWuDYnwibdf3n+izGHY74FaMbSPR2+f42N1HIGQ7jO9Tkr/wZsORTDF/YWWYefz8+P37r3RKMf8AIL4T
        YjPUfWZ+JTb53xjYM/JuvcGVzMeysZhazF56SgpcVm8zv+txBptw1VJPTmClVpfqESR1Gv37r3UTa/zv
        /l7bZ6jxOGymPwnRw29vjCDcnYG+TtyOvxea2zJNLujeclFtqi3FtivrsPgsLU1ORxkhjoVDCIxzl0jl
        917pd9n/ACV+AHyi2/01murd5UPZmxMzsretbR7hxu1exNhbX7Cqps3sTH4/ICBcRsii3RVnIbdynipo
        45o4JaaqRY1Hof3Xuu2/mFfy/OjMmepKb5bN1/2rjewMnV9N9PUO5+wqfatZsKDs+j2/tDbdPsuOkm24
        MLuuPJGggiq41nnMjVEf7cccw917rYBuP6/m3+x/p/r+/de6/9Xfg3Dh4tw4DOYCeaemgzmIyWHnqKZz
        HUwQ5OjmopZqeQEFJ4o5yyG4swHv3XutT7cH/CWPbc+x8311hvlF1xn9rZ3dO093Vdd3F8NNrdndo0tX
        t/rHN9VZHbm3u5ajuHEbv2rsbJ4nNtkqXF0qNHi85EtbA3ktp917rZE2n03ufae1trbVpaTpKqpdr7bw
        O3KaqrOt8tU1c9PgcTSYqGaaeXdhlkkkjpASWLNzySeT7r3VUGM7o7l+RvfPyJ6O2v1r0Ftqs+NG6q7b
        VRWwS9j4vB79p6zP1lC+ZrsFtqBnFft6bEUhEkk0iQzZJkDNcg+690U/+ZH8aN7b7yfwH2Nj+ttkdlZv
        cneG/IN87Vjxm7usdmUeF2/03Vbi3FuzN9gbPyO5t/YTrLA1321PNWw0kVZJ5hTvB/lN/fuvdCV8D+pf
        lx1p1Pj5KOj3b2r2Tj++ezt24bdGK3ziG2/3j09gulsF1PiszuLsrOR1e3tpZzdu79nNgaSrdqrcWNoM
        dTZCSid55ivuvdCr0Ft3ujYmB29t/f3XQo83152Z2XV5ba8PZmA3hg5dzbk7Z6bNJtzr/BCn21gtr4iD
        Lbuxi1tRVVbLU1NXW5BbOZIj7r3Vi1LJ3RPUVEEHx8xss1BPHBWRLvHrOY0kzxR1McdZDDvB5YWkglST
        QyqzRuCBYg+/de617/jnUfKD5B767h7B+P8A8UNw75xGw+6Ox8BmcFvf5N9ZY7r6bL7r25tLFVk24+qs
        vjo8Tnt2YjH4Bamh3HBVvOaqZFdR9mhf3XurCegu6/nF8iOvcRH1P8YPhDtbdEHTWzew9q0Pf+/96bgo
        58Fn91b+2JRYvc2X6063z9RRbthzPV1a+VqKQVlHM88c0Rcl4l917ormX+L3zfw+A2/sjsDeWc6Vz33/
        AGnvvsOl+L/ye3HF1nm8vnBUZap6k2LtPd/VUEv2FJS9y4yrpanIwQQyT4qSiM0cVSZh7r3VB3ze+DW4
        vmB/NI6j7I6T77+PPYW/uiuvOssPuj41ZCn7SxHyRjwvxIzDbW7Kym+NhZ/r6m2tsretXXY94sTBX5qm
        x1Xl5aOCOpAqIHl917r6On8U/wBw38Y/huT1fw7+Ifwj7eL+M+T7X7n+G/befwfxTV+1o8ujy8a7er37
        r3X/1t/j37r3Xvfuvde9+691Ut2d/Kvwu5PkBm+9Ote++5Oqct2DJ2DU79lwm5aOtrMbU7urtv7goKTZ
        NLX4Cpxx21T7sxlbkJcdl/vlp6nJSPRyQIiQD3Xunzrb+W92D1rv3Bdif7Pr8mOzMxtbG7xoNq47uTB9
        Mb3wW2Z99wY6g3BlcRSUXXe3K4ZF8Pi4qGBqmpqUipAYyraiT7r3Svl/l3zSU1JgaD5lfMjYmx9t0m46
        TYOy+oeytu9X47bH96s7LuPJZDK1uC2ZNkN95OhyUrLjzmHqaWjp5JI/BJrLe/de6cqb4K7m2/W19Psf
        5O9kYHab5rI7qxGJ3FtnZ3Y26qTdGa3ztLtDNV2b7K3nSZHd27MVkewNoQ1ZoKuTxR0c8tChFKIUi917
        oQ8X8eu+MJkc7mMN8nMVh8xuusp8nuzL4r439T4/J7qytHjaXDUOU3HXUzR1GYyFDiKGnpIpZ2d0paeO
        IHQgA917qv742/ypflH8bqjuKDY38zPtDbGI7L7ZzPYMNDtn49/H2Snlx+QxmJhoY85S7w2juiOj3HQ1
        K1dPPJiXo8dW08dPP9tDOZV9+690Zf48/AzuD45Yugxe2PmTubcAxXW+3+raDIbk6O6okyku39sZ7fe6
        sRkMpU4ynx0VbuE7i7GyVRUzRR01NUgxK1OCmpvde6Wu6/iJ3hvKtkyGZ+X+WNTIMkCYOgunSitlqTa9
        DWTqtbj61vuVptn0YiYsQh16g6lFj917oc9q/HDbmCxi02Y3Hn9y5bIblg3nvTMyU+3sDLv/AHRDmP4+
        Kzc6bfwtBV1WIGUWNkxYqP4ekcSxiPRqVvde6MX7917r/9ff49+691737r3Xvfuvde9+691737r3Xvfu
        vde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691//0N/j37r3Xvfuvde9+691737r3Xvfuvde9+69
        1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X//R3+Pfuvde9+691737r3Xvfuvde9+691737r3X
        vfuvde9+691737r3Xvfuvde9+691737r3Xvfuvdf/9Lf49+691737r3Xvfuvde9+691737r3Xvfuvde9
        +691737r3Xvfuvde9+691737r3Xvfuvde9+691//09/j37r3Xvfuvde9+691737r3Xvfuvde9+691737
        r3Xvfuvde9+691737r3Xvfuvde9+691737r3X//Z
</value>
  </data>
</root>